buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url 'https://repo.grails.org/grails/core' }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    }
}

version '2.6.1-SNAPSHOT'
group 'org.grails.plugins'

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.grails.grails-plugin'
apply plugin: 'org.grails.grails-plugin-publish'
apply plugin: 'org.grails.grails-gsp'

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    // Grails deps
    compile 'org.springframework.boot:spring-boot-starter-logging'
    compile 'org.springframework.boot:spring-boot-autoconfigure'
    compile 'org.grails:grails-core'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-tomcat'
    compile 'org.grails:grails-dependencies'
    compile 'org.grails:grails-web-boot'
    console 'org.grails:grails-console'
    profile "org.grails.profiles:web-plugin:$grailsVersion"
    provided 'org.grails:grails-plugin-services'
    provided 'org.grails:grails-plugin-domain-class'
    testCompile 'org.grails:grails-plugin-testing'
    testCompile 'org.grails.plugins:geb'
    testRuntime 'org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1'
    testRuntime 'net.sourceforge.htmlunit:htmlunit:2.18'

    // libraries
    compile 'com.google.web.bindery:requestfactory-apt:2.6.1'
    compile 'com.google.web.bindery:requestfactory-server:2.6.1'
    compile 'org.hibernate:hibernate-validator:5.1.0.Final'
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

grailsPublish {
    user = 'donbeave'
    key = 'donbeave'
    userOrg = 'donbeave'
    repo = 'grails-plugins'

    websiteUrl = 'https://github.com/donbeave/grails-gwt-requestfactory'
    license {
        name = 'Apache-2.0'
    }
    issueTrackerUrl = 'https://github.com/donbeave/grails-gwt-requestfactory/issues'
    vcsUrl = 'https://github.com/donbeave/grails-gwt-requestfactory'
    title = 'GWT RequestFactory'
    desc = 'Grails GWT RequestFactory Plugin'
    developers = [donbeave: 'Alexey Zhokhov']
}

if (System.getenv('ARTIFACTORY_CONTEXT_URL')) {
    publishing {
        publications {
            mavenJava(MavenPublication) {
                pom.withXml {
                    def pomNode = asNode()
                    pomNode.dependencyManagement.replaceNode {}

                    // simply remove dependencies without a version
                    // version-less dependencies are handled with dependencyManagement
                    // see https://github.com/spring-gradle-plugins/dependency-management-plugin/issues/8 for more complete solutions
                    pomNode.dependencies.dependency.findAll {
                        it.version.text().isEmpty()
                    }.each {
                        it.replaceNode {}
                    }
                }
                from components.java
                def descriptor =
                        artifacts = ["build/libs/${rootProject.name}-${version}.jar", sourcesJar]

            }
        }
    }
    artifactory {
        contextUrl = System.getenv('ARTIFACTORY_CONTEXT_URL')

        publish {
            defaults {
                publications('mavenJava')
                publishArtifacts = true
                publishPom = true

            }
            repository {
                repoKey = "${version.contains('SNAPSHOT') ? (System.getenv('ARTIFACTORY_SNAPSHOT_REPO_KEY') ?: 'plugins-snapshot-local') : (System.getenv('ARTIFACTORY_RELEASE_REPO_KEY') ?: 'plugins-release-local')}"
                username = System.getenv('ARTIFACTORY_USERNAME') ?: 'admin'
                password = System.getenv('ARTIFACTORY_PASSWORD') ?: 'password'
            }
        }
    }
}